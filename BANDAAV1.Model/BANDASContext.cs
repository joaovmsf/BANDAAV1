// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BANDAAV1.Model
{
    public partial class BANDASContext : DbContext
    {
        public BANDASContext()
        {
        }

        public BANDASContext(DbContextOptions<BANDASContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Tbalbum> Tbalbum { get; set; }
        public virtual DbSet<Tbbanda> Tbbanda { get; set; }
        public virtual DbSet<Tbmusica> Tbmusica { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-QTC7JNL\\SQLEXPRESS;Initial Catalog=BANDAS;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tbalbum>(entity =>
            {
                entity.HasKey(e => e.AlbumId)
                    .HasName("PK_albumId");

                entity.HasOne(d => d.Banda)
                    .WithMany(p => p.Tbalbum)
                    .HasForeignKey(d => d.BandaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TBalbum__bandaId__38996AB5");
            });

            modelBuilder.Entity<Tbbanda>(entity =>
            {
                entity.HasKey(e => e.BandaId)
                    .HasName("PK_bandaId");
            });

            modelBuilder.Entity<Tbmusica>(entity =>
            {
                entity.HasKey(e => e.MusicaId)
                    .HasName("PK_musicaId");

                entity.HasOne(d => d.Album)
                    .WithMany(p => p.Tbmusica)
                    .HasForeignKey(d => d.AlbumId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TBmusica__albumI__3B75D760");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}